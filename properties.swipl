/***************************************************************

Title: properties.swipl

Author: Almerindo E. Ojeda

Type: Prolog

Implementation: SWI-Prolog 5.6.64

Description: This program assigns the phones of English their 
fundamental articulatory properties. To get PROLOG to list th
e instances of a simple property, enter (1), where 'p' is any 
of the fundamental properties of English phones (as abbreviat
ed in this program: 'cns', 'snt', etc.).

(1) phone(X), p(X).

To list the instances of a complex property, enter Boolean com
binations of simple properties, say (2).

(2)	phone(X), cns(X), not(voi(X)).

Incoherent properties like (3a) or (3b) will not be satisfied.

(3)	a.	phone(X), cns(X), not(cns(X)).
	b.	phone(X), ant(X), hih(X).

PROLOG will construct the list of instances of a property (sim
ple or complex) by using the built-in three-place predicate 'f
indall' as illustrated in (4).

(4)	findall(X, (phone(X), cns(X), not(voi(X))), Instances).

For, the predicate 'findall' is true of a triple (A,B,C) iff C 
is a list consisting of all the As that satisfy a fact B. 

If the property mentioned in (4) is incoherent, PROLOG will re
turn the empty list.

******************************************************************/

:- ['phone.swipl'].

cns(A):- name(A,[112]).
cns(A):- name(A,[098]).
cns(A):- name(A,[109]).
cns(A):- name(A,[116]).
cns(A):- name(A,[100]).
cns(A):- name(A,[110]).
cns(A):- name(A,[107]).
cns(A):- name(A,[103]).
cns(A):- name(A,[331]).
cns(A):- name(A,[102]).
cns(A):- name(A,[118]).
cns(A):- name(A,[952]).
cns(A):- name(A,[240]).
cns(A):- name(A,[115]).
cns(A):- name(A,[122]).
cns(A):- name(A,[643]).
cns(A):- name(A,[658]).
cns(A):- name(A,[269]).
cns(A):- name(A,[496]).
cns(A):- name(A,[108]).
cns(A):- name(A,[633]).
cns(A):- name(A,[106]).
cns(A):- name(A,[119]).
cns(A):- name(A,[104]).


snt(A):- name(A,[109]).
snt(A):- name(A,[110]).
snt(A):- name(A,[331]).
snt(A):- name(A,[108]).
snt(A):- name(A,[633]).
snt(A):- name(A,[106]).
snt(A):- name(A,[119]).
snt(A):- name(A,[105]).
snt(A):- name(A,[618]).
snt(A):- name(A,[101]).
snt(A):- name(A,[230]).
snt(A):- name(A,[117]).
snt(A):- name(A,[650]).
snt(A):- name(A,[111]).
snt(A):- name(A,[097]).
snt(A):- name(A,[601]).
snt(A):- name(A,[652]).


nas(A):- name(A,[109]).
nas(A):- name(A,[110]).
nas(A):- name(A,[331]).


voi(A):- name(A,[098]).
voi(A):- name(A,[109]).
voi(A):- name(A,[100]).
voi(A):- name(A,[110]).
voi(A):- name(A,[103]).
voi(A):- name(A,[331]).
voi(A):- name(A,[118]).
voi(A):- name(A,[240]).
voi(A):- name(A,[122]).
voi(A):- name(A,[658]).
voi(A):- name(A,[496]).
voi(A):- name(A,[108]).
voi(A):- name(A,[633]).
voi(A):- name(A,[106]).
voi(A):- name(A,[119]).
voi(A):- name(A,[105]).
voi(A):- name(A,[618]).
voi(A):- name(A,[101]).
voi(A):- name(A,[230]).
voi(A):- name(A,[117]).
voi(A):- name(A,[650]).
voi(A):- name(A,[111]).
voi(A):- name(A,[097]).
voi(A):- name(A,[601]).
voi(A):- name(A,[652]).


cnt(A):- name(A,[102]).
cnt(A):- name(A,[118]).
cnt(A):- name(A,[952]).
cnt(A):- name(A,[240]).
cnt(A):- name(A,[115]).
cnt(A):- name(A,[122]).
cnt(A):- name(A,[643]).
cnt(A):- name(A,[658]).
cnt(A):- name(A,[108]).
cnt(A):- name(A,[633]).
cnt(A):- name(A,[106]).
cnt(A):- name(A,[119]).
cnt(A):- name(A,[104]).
cnt(A):- name(A,[105]).
cnt(A):- name(A,[618]).
cnt(A):- name(A,[101]).
cnt(A):- name(A,[230]).
cnt(A):- name(A,[117]).
cnt(A):- name(A,[650]).
cnt(A):- name(A,[111]).
cnt(A):- name(A,[097]).
cnt(A):- name(A,[601]).
cnt(A):- name(A,[652]).


lab(A):- name(A,[112]).
lab(A):- name(A,[098]).
lab(A):- name(A,[109]).
lab(A):- name(A,[102]).
lab(A):- name(A,[118]).
lab(A):- name(A,[119]).


alv(A):- name(A,[116]).
alv(A):- name(A,[100]).
alv(A):- name(A,[110]).
alv(A):- name(A,[115]).
alv(A):- name(A,[122]).
alv(A):- name(A,[108]).
alv(A):- name(A,[633]).


pal(A):- name(A,[643]).
pal(A):- name(A,[658]).
pal(A):- name(A,[269]).
pal(A):- name(A,[496]).
pal(A):- name(A,[633]).
pal(A):- name(A,[106]).
 

ant(A):- name(A,[112]).
ant(A):- name(A,[098]).
ant(A):- name(A,[109]).
ant(A):- name(A,[116]).
ant(A):- name(A,[100]).
ant(A):- name(A,[110]).
ant(A):- name(A,[102]).
ant(A):- name(A,[118]).
ant(A):- name(A,[952]).
ant(A):- name(A,[240]).
ant(A):- name(A,[115]).
ant(A):- name(A,[122]).
ant(A):- name(A,[108]).
ant(A):- name(A,[633]).


vel(A):- name(A,[107]).
vel(A):- name(A,[103]).
vel(A):- name(A,[331]).
vel(A):- name(A,[119]).


cor(A):- name(A,[116]).
cor(A):- name(A,[100]).
cor(A):- name(A,[110]).
cor(A):- name(A,[952]).
cor(A):- name(A,[240]).
cor(A):- name(A,[115]).
cor(A):- name(A,[122]).
cor(A):- name(A,[643]).
cor(A):- name(A,[658]).
cor(A):- name(A,[269]).
cor(A):- name(A,[496]).
cor(A):- name(A,[108]).
cor(A):- name(A,[633]).
cor(A):- name(A,[106]).


sib(A):- name(A,[115]).
sib(A):- name(A,[122]).
sib(A):- name(A,[643]).
sib(A):- name(A,[658]).
sib(A):- name(A,[269]).
sib(A):- name(A,[496]).


hih(A):- name(A,[105]).
hih(A):- name(A,[618]).
hih(A):- name(A,[117]).
hih(A):- name(A,[650]).


mid(A):- name(A,[101]).
mid(A):- name(A,[111]).
mid(A):- name(A,[601]).
mid(A):- name(A,[652]).


low(A):- name(A,[230]).
low(A):- name(A,[097]).


bck(A):- name(A,[117]).
bck(A):- name(A,[650]).
bck(A):- name(A,[111]).
bck(A):- name(A,[097]).


ctr(A):- name(A,[601]).
ctr(A):- name(A,[652]).


tns(A):- name(A,[105]).
tns(A):- name(A,[117]).


str(A):- name(A,[105]).
str(A):- name(A,[618]).
str(A):- name(A,[101]).
str(A):- name(A,[230]).
str(A):- name(A,[117]).
str(A):- name(A,[650]).
str(A):- name(A,[111]).
str(A):- name(A,[097]).
str(A):- name(A,[652]).
